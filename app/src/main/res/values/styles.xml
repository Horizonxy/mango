<resources>

    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="colorPrimary">@color/color_f6f6f7</item>
        <item name="colorPrimaryDark">@color/color_f6f6f7</item>
        <item name="colorAccent">@color/color_ffb900</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:screenOrientation">portrait</item>
        <item name="android:windowAnimationStyle">@style/activityAnimation</item>
    </style>

    <!-- activity animation 样式 -->
    <style name="activityAnimation" parent="@android:style/Animation">
        <item name="android:activityOpenEnterAnimation">@anim/slide_in_right</item>
        <item name="android:activityOpenExitAnimation">@anim/slide_out_left</item>
        <item name="android:activityCloseEnterAnimation">@anim/slide_in_left</item>
        <item name="android:activityCloseExitAnimation">@anim/slide_out_right</item>
    </style>

    <!-- 启动样式 -->
    <style name="start_theme" parent="AppTheme">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:colorBackgroundCacheHint">@null</item>
    </style>

    <style name="activity_translucent" parent="AppTheme">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <!--边界内点击水波纹-->
    <style name="repple_in_backguound">
        <item name="android:background">?android:attr/selectableItemBackground</item>
    </style>

    <!--边界外点击水波纹-->
    <style name="repple_out_backguound">
        <item name="android:background">?android:attr/actionBarItemBackground</item>
    </style>

    <style name="important_corners_btn">
        <item name="android:layout_height">@dimen/dp_42</item>
        <item name="android:textSize">@dimen/sp_16</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:textColor">@drawable/selector_text_color_important_btn</item>
        <item name="android:background">@drawable/selector_btn_bg_important_corners</item>
        <item name="android:gravity">center</item>
    </style>

    <style name="lesser_corners_btn">
        <item name="android:layout_height">@dimen/dp_42</item>
        <item name="android:textSize">@dimen/sp_16</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:textColor">@drawable/selector_text_color_lesser_btn</item>
        <item name="android:background">@drawable/selector_btn_bg_lesser_corners</item>
        <item name="android:gravity">center</item>
    </style>

    <style name="rect_btn">
        <item name="android:layout_height">@dimen/dp_42</item>
        <item name="android:textSize">@dimen/sp_16</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:textColor">@drawable/selector_text_color_important_btn</item>
        <item name="android:background">@drawable/selector_bg_rect_btn</item>
        <item name="android:gravity">center</item>
    </style>


    <style name="horizontal_line">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">@dimen/dp_0.5</item>
        <item name="android:background">@color/color_efeff4</item>
    </style>

    <style name="margin_horizontal_line">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">@dimen/dp_0.5</item>
        <item name="android:layout_marginLeft">@dimen/dp_15</item>
        <item name="android:layout_marginRight">@dimen/dp_15</item>
        <item name="android:background">@color/color_efeff4</item>
    </style>

    <style name="horizontal_bold_line">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">@dimen/dp_10</item>
        <item name="android:background">@color/color_efeff4</item>
    </style>

    <style name="vertical_line">
        <item name="android:layout_width">@dimen/dp_0.5</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:background">@color/color_efeff4</item>
    </style>

    <style name="Loading_Dialog" parent="android:style/Theme.Dialog">
        <item name="android:windowNoTitle">true</item>
        <item name="android:background">#00000000</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:colorBackgroundCacheHint">@null</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:backgroundDimEnabled">false</item>
    </style>

    <style name="Widget.GifMoviewView" parent="@android:style/Widget"></style>

    <!-- 对话框样式 -->
    <style name="SetTransPwdStyleDialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowFrame">@null</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">false</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:backgroundDimEnabled">true</item>
    </style>

    <style name="CourseListWindow">
        <item name="android:windowEnterAnimation">@anim/slide_in_bottom</item>
        <item name="android:windowExitAnimation">@anim/slide_out_bottom</item>
    </style>

    <!-- pull to refresh recent -->
    <declare-styleable name="PullToRefresh">
        <attr name="headerView" format="reference" />
        <attr name="contentView" format="reference" />
        <attr name="zoomView" format="reference" />
        <attr name="isHeaderParallax" format="boolean" />

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />
        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- ExpandableListView be used -->
        <attr name="isExpandableList" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.

        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.

        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <!-- pull to refresh recent end -->

    <!-- Defines the custom XML attributes supported for a HorizontalListView -->
    <declare-styleable name="HorizontalListView">
        <attr name="dividerWidth" format="dimension" />
        <attr name="android:divider" />
        <attr name="android:requiresFadingEdge" />
        <attr name="android:fadingEdgeLength" />
    </declare-styleable>

    <declare-styleable name="RedPointView">
        <attr name="point_color" format="color"/>
        <attr name="radius" format="dimension"/>
    </declare-styleable>

</resources>
